In linux 
To practice - (install git or MobaXterm)

Create a linux machine in AWS cloud 

1. Create a AWS account 
2. wait for the account to get activated 
3. Search for EC2 service -> Goto Instances -> Launch Instances 
	a. Give a name to the machine (instance)
	b. Choose the OS type (AMI type)
	c. Create and save the Key Pair to login 
4. Create instance 

In linux command are casesensitive 

folder is called as Directory 

Know your current path/location 
    pwd - present working directory 

To list files and directories 
     command: ls 
     To list with details (long format): ls -l
     To list with creation time sorted (recent at top): ls -t
     To list reverse order: ls -r
     All the above together: ls -lrt (OR) ll
       
switch/change to a folder/Directory in linux (change directory - cd)
    command: cd  
    Syntax: cd <path>/<location>
    example: 1. To change to a Directory in current location
    		cd test 

create a directory/folder in linux (make directory - mkdir)
    command: mkdir 
    To create a directory: mkdir <directory_name>
    		example: mkdir test
    To create multiple directories: mkdir <directory_name> <directory_name1> <directory_name2> ..... <directory_name>
    		note: directory names with space seperated	
    		example: mkdir test test1 test2 ....		
    
rename or move the file from one location to another (mv)
	- mv command to move files and directory through the command line. 
	- We can also use the mv command to rename a file/directory.
	To rename a file/directory
		mv old_filename new_filename
		mv old_directory new_directory
	To move to a different location (cut and paste)	
		mv <source> <destination>
	
Delete files/directories (rm)

Use the rm command to delete files and directories. But rm cannot simply delete a directory. Use “rm -r” to delete a directory. In this case, it deletes both the folder and the files in it.
     To remove/delete a file 	
	rm file_name 
     To remove/delete a Directory	
	rm -r directory

Linux path 
  Always linux path is seperate with / 	
   . -> current directory 
   .. -> one step back / Previous one directory 
   ../.. -> Previous two directory

To create a empty file (touch)
    if file does not exists, touch command will creates empty file.
    If file already exists, touch command will alter the file timestamp to recent.
	touch <file_name>
To display/print tje contents of files (cat)
	cat command (short for “concatenate“) allows us to create single or multiple files, view contain
	of file, concatenate files and redirect output in terminal or files.
		cat <file_name>


To install tree command execute the below 2 command seperately 
    1. sudo apt update
    2. sudo apt install tree 


Vi Editor 

	Command Mode  
		- we can't add any content. This is used to run vi related commands. 
		- Initialy when we do vi to a file command mode is the default mode.
	
		Only Save the changes to the file -  ':w'
		To quit from vi - ':q!'
		Save and quit from vi - ':wq!' or (<escape> - Hold shift + zz)
		Save to another file - ':w <new_file>'

		To search a word - '/<word>'

		To display line numbers - ':set nu'

		To replace word - s/<old_word>/<new_word>/g

		To display line numbers - ':nu'

		dd - cut the entire line where the cursor is 
		yy - copy the entire line where the cursor is 
		p - paste the clip-borad content next to the cursor 

	
	Insert Mode 
		- Is used add the content to the file.
 		- Press 'i' to enter to insert mode 
 		- Press '<escape>' to exit insert mode and move to command mode.


chmod 
   (Chart I added as image in the same repo)
   - chmod command is used to change the access mode of a file. 
   - The name is an abbreviation of change mode. 

   example: 1. Read, write and execute permissions to the file owner: 
   			chmod u+rwx <file_name>	
				(OR)
			chmod 700 <file_name>		
	    2. Read, write to file owner, Read to groups and Wrtie, Execute to Others: 
   			chmod u+rw, g+r, o+wx <file_name>	
				(OR)
			chmod 643 <file_name>

tail 
tail -n n file.txt The tail command, as the name implies, print the last N number of lines
of the given input. By default, it prints the first 10 lines of the specified files.
	# Prints last 5 line of file.txt
		tail -n 5 file.txt (or) tail -5 file.txt 

find
	find command can be used to find files and directories and perform subsequent operations on them. It supports searching by file, folder, name, creation date, modification date, owner and permissions. By using the ‘-exec’ other commands can be executed on files or folders found.
	
SYNTAX: find <location_to_find> [options]

1) Searcha file with specific name -> 
	find . -name file.txt
3) Searcha file with specific name with ignorecase -> 
	find . -iname file.txt
2) searcha files in multiple directories -> 
	find . /home /user -name file.txt
4) Search only files containing name -> 
	find . -type f -iname file.txt
5) Search only directories containing name -> 
	find . -type d -iname file.txt
6) Search for empty files and directories -> 
	find . -empty
7) Search for file with permissions(655) -> 
	find . -perm 655
8) Search text within multiple files. 
	find./-typef-name"*.txt"-execgrep'search_string' {}\;
9) find files by last modification time -> 
	find . -mtime days
	# 24 hours -> find . -mtime 1
	# modified less than 7 days (7 days to till) -> find . -mtime -7
	# Last 50-100 Days Modified Files -> find . -mtime +50 –mtime -100 
10) Find Last 50 Days Accessed Files -> find . -atime 50
11) Find Changed Files in Last 1 Hour -> find / -mmin -60
12) Find Accessed Files in Last 1 Hour -> find / -amin -60

grep
‘global search for the regular expression’: The grep command is a filter that is used to search for lines
matching a specified pattern and print the matching lines to standard output.

1) Match all lines that start with‘hello’.E.g:“hellothere” -> 
	grep “^hello” file1
2) Match all lines that end with‘done’.E.g:“welldone” -> 
	grep “done$” file1
3) Match all lines that contain any of the letters‘a’,‘b’,‘c’,‘d’or‘e’ -> 
	grep “[a-e]” file1
4) Match all lines that do not contain a vowel -> 
	grep “[^aeiou]” file1
5) Match all lines that start with a digit following zero or more spaces. E.g:“1.”or“2.” -> 
	grep “ *[0-9]” file1
6) Searching in all files recursively using -> 
	grep-r grep -r "ramesh" *
7) Search multiple patterns -> 
	grep -v -e "pattern" -e "pattern"

